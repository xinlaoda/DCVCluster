AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application for DCV cluster.
Outputs:
  createDCV: 
    Value: !GetAtt createDCVfunction.Arn
  updateDCV: 
    Value: !GetAtt updateDCVfunction.Arn
  modifyDCV: 
    Value: !GetAtt modifyDCVfunction.Arn
  removeDCV: 
    Value: !GetAtt removeDCVfunction.Arn
  listDCV: 
    Value: !GetAtt listDCVfunction.Arn
  openDCV: 
    Value: !GetAtt openDCVfunction.Arn
Resources:
  createDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_createDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/createDCV
      Description: Create DCV
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__
  updateDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_updateDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/updateDCV
      Description: Update DCV
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__
          ALB_DNS_Name: __ALB_DNS_NAME__
  removeDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_removeDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/removeDCV
      Description: Remove DCV session.
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__
  modifyDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_modifyDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/modifyDCV
      Description: Modify DCV session.
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__
  listDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_listDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/listDCV
      Description: List DCVs
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__
  openDCVfunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function_openDCV.lambda_handler
      Runtime: python3.7
      CodeUri: functions/openDCV
      Description: Open DCV
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AutoScalingFullAccess
        - AmazonEC2FullAccess
        - AmazonDynamoDBFullAccess
        - AWSCloudFormationFullAccess
        - ElasticLoadBalancingFullAccess
      Environment:
        Variables:
          DCVELBListener: __DCVELBListener__
          KeyPair: __DCVKeyPair__
          VPCId: __VPCId__
          PublicSubnetId: __PublicSubnetId__
          DCVSecurityGroupId: __DCVEC2SG__
          DCVDynamoDBTable: __DCVDynamoDBTable__

### generate Api Gateway resource method
## POST
  ApiGWCreateDCVmethod:
    Type: AWS::ApiGateway::Method
    Properties: 
      AuthorizationType: NONE
      HttpMethod: POST
      Integration: 
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt createDCVfunction.Arn
      ResourceId: __DCVApiGWResource__
      RestApiId: __DCVApiGW__
  lambdaApiGatewayPOSTInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt createDCVfunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:__DCVApiGW__/*/POST/dcv"
  ## GET
  ApiGWListDCVmethod:
    Type: AWS::ApiGateway::Method
    Properties: 
      AuthorizationType: NONE
      HttpMethod: GET
      Integration: 
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt listDCVfunction.Arn
        IntegrationResponses: 
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty
      ResourceId: __DCVApiGWResource__
      RestApiId: __DCVApiGW__
  lambdaApiGatewayGETInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt listDCVfunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:__DCVApiGW__/*/GET/dcv"
  ## DELETE

  ApiGWRemoveDCVmethod:
    Type: AWS::ApiGateway::Method
    Properties: 
      AuthorizationType: NONE
      HttpMethod: DELETE
      Integration: 
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt removeDCVfunction.Arn
        IntegrationResponses: 
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty
      ResourceId: __DCVApiGWResource__
      RestApiId: __DCVApiGW__

  lambdaApiGatewayDELETEInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt removeDCVfunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:__DCVApiGW__/*/DELETE/dcv"
  ## PUT
  ApiGWModifyDCVmethod:
    Type: AWS::ApiGateway::Method
    Properties: 
      AuthorizationType: NONE
      HttpMethod: PUT
      Integration: 
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt modifyDCVfunction.Arn
        IntegrationResponses: 
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty
      ResourceId: __DCVApiGWResource__
      RestApiId: __DCVApiGW__
  lambdaApiGatewayPUTInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt modifyDCVfunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:__DCVApiGW__/*/PUT/dcv"
  ## Deployment
  ApiGWDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGWCreateDCVmethod
      - ApiGWModifyDCVmethod
      - ApiGWRemoveDCVmethod
      - ApiGWListDCVmethod
    Properties:
      RestApiId: __DCVApiGW__
      StageName: v1
  
  ## Setup scheduler for update function
  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minute)"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "updateDCVfunction"
              - "Arn"
          Id: "UpdateDCV"
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "updateDCVfunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"
